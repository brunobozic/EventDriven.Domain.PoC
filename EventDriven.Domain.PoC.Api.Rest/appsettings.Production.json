{
  "ConnectionStrings": {
    "Sqlite": "Filename=Db.sqlite;",
    "HangfireConnection": "Filename=Hangfire.sqlite;",
    "DapperConnection": "Server=DESKTOP\\SQLEXPRESS;Database=Dev;Trusted_Connection=True;MultipleActiveResultSets=True",
    "MSSql": "Server=DESKTOP\\SQLEXPRESS;Database=Dev;Trusted_Connection=True;MultipleActiveResultSets=True"
  },
  "InstanceName": "EventDriven.Domain.PoC",
  "Environment": "LocalDevelopment",
  "HealthChecksUI": {
    "HealthChecks": [
      {
        "Name": "HTTP-Api-Basic",
        "Uri": "https://localhost:5001/health"
      }
    ],
    "Webhooks": [
      {
        "Name": "Slack",
        "Uri": "https://hooks.slack.com/services/T0GHRA4CR/BB551L6SW/LWYRVRA2NEs4pQG7pbPym",
        "Payload": "{\"text\":\"The HealthCheck [[LIVENESS]] is failing with the error message: [[FAILURE]]. [[DESCRIPTIONS]]. <http://yourappstatus|Click here> to get more details.\",\"channel\":\"#general\",\"link_names\": 1,\"username\":\"monkey-bot\",\"icon_emoji\":\":monkey_face:\"}",
        "RestoredPayload": "{\"text\":\"The HealthCheck [[LIVENESS]] is recovered. All is up and running\",\"channel\":\"#general\",\"link_names\": 1,\"username\":\"monkey-bot\",\"icon_emoji\":\":monkey_face:\"}"
      }
    ],
    "EvaluationTimeInSeconds": 10,
    "MinimumSecondsBetweenFailureNotifications": 60
  },
  "ServiceDiscovery": {
    "ServiceName": "EventDriven.Domain.PoC.Api.Rest",
    "Consul": {
      "HttpEndpoint": "http://127.0.0.1:8500",
      "DnsEndpoint": {
        "Address": "127.0.0.1",
        "Port": 8600
      }
    }
  },
  "Logging": {
    "IncludeScopes": true,
    "LogLevel": {
      "Default": "Warning",
      "System": "Warning",
      "Microsoft": "Warning",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "Consul": {
    "Host": "http://localhost:8500"
  },
  "spring": {
    "application": {
      "name": "EventDriven.Domain.PoC.Api.Rest"
    }
  },
  "eureka": {
    "client": {
      "shouldRegisterWithEureka": true,
      "serviceUrl": "http://localhost:8761/eureka",
      "ValidateCertificates": false
    },
    "instance": {
      "appName": "EventDriven.Domain.PoC.Api.Rest",
      "hostName": "localhost",
      "port": "6000"
    }
  },
  "Serilog": {
    "ConnectionString": "ErrorLog.sqlite",
    "TableName": "Logs",
    "MinimumLevel": {
      "Default": "Warning",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning",
        "Microsoft.AspNetCore": "Warning"
      }
    }
  },
  "MyConfigurationValues": {
    "DefaultPageSize": 10,
    "DefaultPageNumber": 1,
    "ResponseCaching": true,
    "CorrelationIdEmission": true,
    "SerilogElasticSearch": true,
    "SerilogConsole": true,
    "SerilogLogToFile": true,
    "GenericErrorMessageForEndUser": "An error has ocurred, please contact customer support. Ticket Id : {0}",
    "NotFoundErrorMessageForEndUser": "The item you requested was not found, please contact customer support.",
    "InstanceName": "EventDriven.Domain.PoC",
    "Environment": "LocalDevelopment",
    "ElasticSearchUrl": "http://localhost:9200",
    "cachingIsEnable": "true",
    "cacheTimeoutSecond": 60,
    "UseActiveDirectory": false,
    "SmtpOptions": {
      "Port": 587,
      "Host": "smtp.gmail.com",
      "UserName": "event.drivenpoc@gmail.com",
      "Password": "PwdPwdPwd2!",
      "EmailIsFrom": "event.drivenpoc@gmail.com",
      "EnableSSL": true,
      "UseDefaultCredentials": true
    },
    "MailOptions": {
      "EmailFrom": "bruno.bozic@admin.hr",
      "ConfirmApplicationUserUrlTemplate": "http://localhost:4200/activate/{0}?token={1}",
      "ResetPasswordUrlTemplate": "http://localhost:4200/reset-password/{0}?token={1}"
    },
    "Secret": "THIS IS USED TO SIGN AND VERIFY JWT TOKENS, REPLACE IT WITH YOUR OWN SECRET, IT CAN BE ANY STRING",
    "RefreshTokenTTL": 2,
    "KafkaConsumerSettings": {
      "BootstrapServers": "localhost:9094",
      "SaslMechanism": "Plain",
      "SecurityProtocol": "Plain",
      "SaslUsername": "admin",
      "SaslPassword": "admin012",
      "GroupId": "88888",
      "ClientId": "888088",
      "EnableAutoOffsetStore": false,
      "SaslKerberosKeytab": "filename.keytab", //specify your keytab file here , another example: "/etc/secrets/ID.keytab"
      "SaslKerberosPrincipal": "youralias@DOMAIN.COM", //specify your alias here
      "SaslKerberosKinitCmd": "\"kinit -k -t %{sasl.kerberos.keytab} %{sasl.kerberos.principal}\".",
      "SaslKerberosServiceName": "Kafka",
      "SslCaLocation": "ca-bundle.pem",
      "EnablePartitionEof": false,
      "MetadataRequestTimeoutMs": 60000,
      "MaxPollIntervalMs": 300000,
      "KafkaTopic": "my-new-topic",
      "EnableKafkaLogging": false,
      "EnableAutoCommit": true
    },
    "KafkaProducerSettings": {
      "BootstrapServers": "localhost:9094",
      "SecurityProtocol": "Plain",
      "SaslUsername": "admin",
      "SaslPassword": "admin012",
      "GroupId": "888",
      "ClientId": "8881",
      "SaslMechanism": 1, //0 for GSSAPI, 1 for PLAIN,
      "KafkaTopic": "my-new-topic",
      "EnableKafkaLogging": false
    },
    "KafkaLoggingProducerSettings": {
      "BootstrapServers": "localhost:9094",
      "SecurityProtocol": "SASL_PLAINTEXT",
      "SaslMechanism": "Plain",
      "SaslUsername": "Warning",
      "SaslPassword": "Information",
      "KafkaTopic": "DONAT_GADM_ADAPTER_LOG",
      "ClientId": "test_donat-gadm",
      "EnableKafkaLogging": false,
      "GroupId": "CG_DONAT_GADM_ADAPTER_LOG"
    },
    "DeadLetterArchiveJobSettings": {
      "Interval": 6
    },
    "DeadLetterOutboxJobSettings": {
      "Interval": 6
    },
    "PollySettings": {
      "KafkaConsumerCircuitBreakerPolicy": {
        "Tries": 3,
        "CooldownSeconds": 60
      },
      "KafkaConsumerRetryPolicy": {
        "RetryTimes": 3
      },
      "KafkaProducerCircuitBreakerPolicy": {
        "Tries": 3,
        "CooldownSeconds": 60
      },
      "KafkaProducerRetryPolicy": {
        "RetryTimes": 3
      },
      "KafkaSharedExponentialBackoff": {
        "InitialDelayMiliseconds": 100
      },
      "DeadLetterOutboxJobSettings": {
        "Interval": 3
      },
      "DeadLetterArchiveJobSettings": {
        "Interval": 3
      }
    },
    "MainKafkaMessagePollInterval": 8
  },
  "JwtIssuerOptions": {
    "Issuer": "webApi",
    "Key": "123dcf3d-6937-49d6-b282-358be23a6b9a",
    "Audience": "http://localhost:59612/",
    "Secret": "123dcf3d-6937-49d6-b282-358be23a6b9a",
    "ValidFor": 1209600
  }
}